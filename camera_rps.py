{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-09 09:54:25.649056: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/cv2/../../lib64:\n",
      "2022-06-09 09:54:25.649084: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\n",
      "2022-06-09 09:54:27.577926: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/cv2/../../lib64:\n",
      "2022-06-09 09:54:27.577958: W tensorflow/stream_executor/cuda/cuda_driver.cc:269] failed call to cuInit: UNKNOWN ERROR (303)\n",
      "2022-06-09 09:54:27.577981: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (zainkhan): /proc/driver/nvidia/version does not exist\n",
      "2022-06-09 09:54:27.578213: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\n",
      "Player score = 0\n",
      "Computer score = 0\n",
      "The computer is ready to play... Get ready to show!!!\n",
      "Ready in 3\n",
      "Ready in 2\n",
      "Ready in 1\n",
      "SHOW!!!\n",
      "1/1 [==============================] - 1s 902ms/step\n",
      "1/1 [==============================] - 0s 33ms/step\n",
      "1/1 [==============================] - 0s 34ms/step\n",
      "1/1 [==============================] - 0s 31ms/step\n",
      "1/1 [==============================] - 0s 33ms/step\n",
      "1/1 [==============================] - 0s 31ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 30ms/step\n",
      "1/1 [==============================] - 0s 34ms/step\n",
      "1/1 [==============================] - 0s 31ms/step\n",
      "1/1 [==============================] - 0s 33ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 31ms/step\n",
      "1/1 [==============================] - 0s 34ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 33ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 33ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 36ms/step\n",
      "1/1 [==============================] - 0s 33ms/step\n",
      "1/1 [==============================] - 0s 30ms/step\n",
      "1/1 [==============================] - 0s 31ms/step\n",
      "1/1 [==============================] - 0s 29ms/step\n",
      "1/1 [==============================] - 0s 29ms/step\n",
      "1/1 [==============================] - 0s 31ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 32ms/step\n",
      "1/1 [==============================] - 0s 28ms/step\n",
      "The computer chose Paper\n",
      "You chose Rock\n",
      "Unlucky, the computer beat your ass to the ground... haha.\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "Interrupted by user",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[1;32m/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb Cell 1'\u001b[0m in \u001b[0;36m<cell line: 125>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=127'>128</a>\u001b[0m (showArrAvg, humanSelection) \u001b[39m=\u001b[39m getSelection(cap, model, showArr, data)\n\u001b[1;32m    <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=128'>129</a>\u001b[0m winner \u001b[39m=\u001b[39m test(showArrAvg, tempComputerSelection)\n\u001b[0;32m--> <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=129'>130</a>\u001b[0m (gameOn, playerScore, compScore) \u001b[39m=\u001b[39m winnerIs(computerSelection, humanSelection, playerScore, compScore, gameOn, winner)\n",
      "\u001b[1;32m/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb Cell 1'\u001b[0m in \u001b[0;36mwinnerIs\u001b[0;34m(computerSelection, humanSelection, playerScore, compScore, gameOn, winner)\u001b[0m\n\u001b[1;32m     <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=97'>98</a>\u001b[0m \u001b[39melif\u001b[39;00m winner \u001b[39m==\u001b[39m \u001b[39m2\u001b[39m:\n\u001b[1;32m     <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=98'>99</a>\u001b[0m     \u001b[39mprint\u001b[39m(\u001b[39m'\u001b[39m\u001b[39mUnlucky, the computer beat your ass to the ground... haha.\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[0;32m--> <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=99'>100</a>\u001b[0m     \u001b[39minput\u001b[39;49m(\u001b[39m'\u001b[39;49m\u001b[39mPress any key to continue!\u001b[39;49m\u001b[39m'\u001b[39;49m)\n\u001b[1;32m    <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=100'>101</a>\u001b[0m     compScore \u001b[39m=\u001b[39m compScore \u001b[39m+\u001b[39m \u001b[39m1\u001b[39m\n\u001b[1;32m    <a href='vscode-notebook-cell:/home/zain/Documents/UNI/AI/Computer-vision-project-AICORE/camera_rps.ipynb#ch0000000?line=101'>102</a>\u001b[0m \u001b[39melse\u001b[39;00m:\n",
      "File \u001b[0;32m~/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py:1165\u001b[0m, in \u001b[0;36mKernel.raw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1160'>1161</a>\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_allow_stdin:\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1161'>1162</a>\u001b[0m     \u001b[39mraise\u001b[39;00m StdinNotImplementedError(\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1162'>1163</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mraw_input was called, but this frontend does not support input requests.\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1163'>1164</a>\u001b[0m     )\n\u001b[0;32m-> <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1164'>1165</a>\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_input_request(\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1165'>1166</a>\u001b[0m     \u001b[39mstr\u001b[39;49m(prompt),\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1166'>1167</a>\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_parent_ident[\u001b[39m\"\u001b[39;49m\u001b[39mshell\u001b[39;49m\u001b[39m\"\u001b[39;49m],\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1167'>1168</a>\u001b[0m     \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mget_parent(\u001b[39m\"\u001b[39;49m\u001b[39mshell\u001b[39;49m\u001b[39m\"\u001b[39;49m),\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1168'>1169</a>\u001b[0m     password\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m,\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1169'>1170</a>\u001b[0m )\n",
      "File \u001b[0;32m~/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py:1207\u001b[0m, in \u001b[0;36mKernel._input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1203'>1204</a>\u001b[0m             \u001b[39mbreak\u001b[39;00m\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1204'>1205</a>\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mKeyboardInterrupt\u001b[39;00m:\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1205'>1206</a>\u001b[0m     \u001b[39m# re-raise KeyboardInterrupt, to truncate traceback\u001b[39;00m\n\u001b[0;32m-> <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1206'>1207</a>\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mKeyboardInterrupt\u001b[39;00m(\u001b[39m\"\u001b[39m\u001b[39mInterrupted by user\u001b[39m\u001b[39m\"\u001b[39m) \u001b[39mfrom\u001b[39;00m \u001b[39mNone\u001b[39m\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1207'>1208</a>\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mException\u001b[39;00m:\n\u001b[1;32m   <a href='file:///home/zain/miniconda3/envs/aicore_new/lib/python3.8/site-packages/ipykernel/kernelbase.py?line=1208'>1209</a>\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mlog\u001b[39m.\u001b[39mwarning(\u001b[39m\"\u001b[39m\u001b[39mInvalid Message:\u001b[39m\u001b[39m\"\u001b[39m, exc_info\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m)\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"
     ]
    }
   ],
   "source": [
    "import math\n",
    "import time\n",
    "from random import random\n",
    "import cv2\n",
    "from keras.models import load_model\n",
    "import numpy as np\n",
    "model = load_model('keras_model.h5')\n",
    "cap = cv2.VideoCapture(0)\n",
    "data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)\n",
    "showArr = [0]*30\n",
    "playerScore = 0\n",
    "compScore = 0\n",
    "gameOn = True\n",
    "\n",
    "# Print the current score and determine comp selection.\n",
    "def initialise(playerScore, compScore):\n",
    "    print('Player score = {}'.format(playerScore))\n",
    "    print('Computer score = {}'.format(compScore))\n",
    "    # Select R, P or S for the comp.\n",
    "    tempComputerSelection = int(math.ceil(3 * random()))\n",
    "    if tempComputerSelection == 1:\n",
    "        computerSelection = 'Rock'\n",
    "    elif tempComputerSelection == 2:\n",
    "        computerSelection = 'Paper'\n",
    "    elif tempComputerSelection == 3:\n",
    "        computerSelection = 'Scissors'\n",
    "    else:\n",
    "        print('Error Line 20')\n",
    "    return tempComputerSelection, computerSelection\n",
    "\n",
    "# Inform the user that the comp is ready, and that the user should place their hand in front of the camera in 3, 2, 1, now...\n",
    "def countdown():\n",
    "    print('The computer is ready to play... Get ready to show!!!')\n",
    "    time.sleep(2)\n",
    "    for i in range(3,0,-1):\n",
    "        print('Ready in {}'.format(i))\n",
    "        time.sleep(1)\n",
    "    print('SHOW!!!')\n",
    "\n",
    "# Acquire hand gesture.\n",
    "def getSelection(cap, model, showArr, data):\n",
    "    for i in range(0,30): \n",
    "        ret, frame = cap.read()\n",
    "        resized_frame = cv2.resize(frame, (224, 224), interpolation = cv2.INTER_AREA)\n",
    "        image_np = np.array(resized_frame)\n",
    "        normalized_image = (image_np.astype(np.float32) / 127.0) - 1 # Normalize the image\n",
    "        data[0] = normalized_image\n",
    "        prediction = model.predict(data)\n",
    "        if prediction[0][0]>0.5:\n",
    "            showArr[i] = 1\n",
    "        elif prediction[0][1]>0.5:\n",
    "            showArr[i] = 2\n",
    "        elif prediction[0][2]>0.5:\n",
    "            showArr[i] = 3\n",
    "        else:\n",
    "            showArr[i] = 4\n",
    "    # Record the most popular selection from the list from 30 samples.\n",
    "    showArrAvg = int(math.ceil(sum(showArr) / len(showArr))) # This records the mean (rounded), however this is not correct for the discrete variables. It should be mode, but I havent spent time dealing with the inevitable errors.\n",
    "    if showArrAvg == 1:\n",
    "        humanSelection = 'Rock'\n",
    "    elif showArrAvg == 2:\n",
    "        humanSelection = 'Paper'\n",
    "    elif showArrAvg == 3:\n",
    "        humanSelection = 'Scissors'\n",
    "    else:\n",
    "        humanSelection = 'nothing?! You didnt show your hand clearly enough!! Cheeky!'\n",
    "    return showArrAvg, humanSelection\n",
    "\n",
    "# Test to find the winner of the round. -> List of tuples\n",
    "def test(showArrAvg, tempComputerSelection):\n",
    "    if (showArrAvg == 1 and tempComputerSelection == 2):\n",
    "        winner = 2\n",
    "    elif (showArrAvg == 1 and tempComputerSelection == 3):\n",
    "        winner = 1\n",
    "    elif (showArrAvg == 2 and tempComputerSelection == 1):\n",
    "        winner = 1\n",
    "    elif (showArrAvg == 2 and tempComputerSelection == 3):\n",
    "        winner = 2\n",
    "    elif (showArrAvg == 3 and tempComputerSelection == 1):\n",
    "        winner = 2\n",
    "    elif (showArrAvg == 3 and tempComputerSelection == 2):\n",
    "        winner = 1\n",
    "    else:\n",
    "        winner = 3\n",
    "    return winner\n",
    "\n",
    "# State the winner of the round and determine if there is a game winner. Inform human.\n",
    "def winnerIs(computerSelection, humanSelection, playerScore, compScore, gameOn, winner):\n",
    "    # Determine who has won the round.\n",
    "    print('The computer chose {}'.format(computerSelection))\n",
    "    print('You chose {}'.format(humanSelection))\n",
    "    \n",
    "    # State whom has won the round and let the human determine when the game continues with a key press.\n",
    "    if winner == 1:\n",
    "        print('Congratulation! You won!')\n",
    "        input('Press any key to continue!')\n",
    "        playerScore = playerScore + 1\n",
    "    elif winner == 2:\n",
    "        print('Unlucky, the computer beat your ass to the ground... haha.')\n",
    "        input('Press any key to continue!')\n",
    "        compScore = compScore + 1\n",
    "    else:\n",
    "        print(\"It's a draw!!!\")\n",
    "        input('Press any key to continue!')\n",
    "    \n",
    "    # If human wins, state won, and ask to play again or quit.\n",
    "    if playerScore == 2:\n",
    "        replay = input(\"You won the game! Would you like to play again?\").lower()\n",
    "        if (replay == \"y\" or replay == \"yes\"):\n",
    "            playerScore = 0\n",
    "            compScore = 0\n",
    "        else:\n",
    "            gameOn = False\n",
    "    \n",
    "    # If comp wins, state lost, and ask to play again or quit.\n",
    "    if compScore == 2:\n",
    "        replay = input(\"You lost the game! Would you like to play again?\").lower()\n",
    "        if (replay == \"y\" or replay == \"yes\"):\n",
    "            playerScore = 0\n",
    "            compScore = 0\n",
    "        else:\n",
    "            gameOn = False\n",
    "    return gameOn, playerScore, compScore\n",
    "    \n",
    "while gameOn:\n",
    "    (tempComputerSelection, computerSelection) = initialise(playerScore, compScore)\n",
    "    countdown()\n",
    "    (showArrAvg, humanSelection) = getSelection(cap, model, showArr, data)\n",
    "    winner = test(showArrAvg, tempComputerSelection)\n",
    "    (gameOn, playerScore, compScore) = winnerIs(computerSelection, humanSelection, playerScore, compScore, gameOn, winner)"
   ]
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "ec2260cf1d0349b3fbd89e51ab8335f9d0dc5ed0b1729ee5b5da433e0ccb1555"
  },
  "kernelspec": {
   "display_name": "Python 3.8.0 ('aicore_new')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
